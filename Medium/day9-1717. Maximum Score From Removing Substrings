
1717. Maximum Score From Removing Substrings

You are given a string s and two integers x and y. You can perform two types of operations any number of times.

Remove substring "ab" and gain x points.
For example, when removing "ab" from "cabxbae" it becomes "cxbae".
Remove substring "ba" and gain y points.
For example, when removing "ba" from "cabxbae" it becomes "cabxe".
Return the maximum points you can gain after applying the above operations on s.


Example 1:

Input: s = "cdbcbbaaabab", x = 4, y = 5
Output: 19
Explanation:
- Remove the "ba" underlined in "cdbcbbaaabab". Now, s = "cdbcbbaaab" and 5 points are added to the score.
- Remove the "ab" underlined in "cdbcbbaaab". Now, s = "cdbcbbaa" and 4 points are added to the score.
- Remove the "ba" underlined in "cdbcbbaa". Now, s = "cdbcba" and 5 points are added to the score.
- Remove the "ba" underlined in "cdbcba". Now, s = "cdbc" and 5 points are added to the score.
Total score = 5 + 4 + 5 + 5 = 19.
Example 2:

Input: s = "aabbaaxybbaabb", x = 5, y = 4
Output: 20

class Solution {
public:
    int removePattern(string &s, char first ,char second, int score){
        stack<char> st;
        int total = 0;
        for(char ch : s){
            if(!st.empty() && st.top() == first && ch == second){
                st.pop();
                total += score;
            }
            else {
                st.push(ch);
            }
        }
        vector<char> temp;
        while(!st.empty()){
            temp.push_back(st.top());
            st.pop();
        }
        reverse(temp.begin(),temp.end());
        s = string(temp.begin(),temp.end());
        return total;
    }
    int maximumGain(string s, int x, int y) {
        int total = 0;
        if(x > y){
            total += removePattern(s, 'a','b',x);
            total += removePattern(s, 'b', 'a',y);
        }
        else{
            total += removePattern(s, 'b' , 'a', y);
            total += removePattern(s, 'a', 'b', x);
        }
        return total;
    }
};
