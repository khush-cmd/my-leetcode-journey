257. Binary Tree Paths

Given the root of a binary tree, return all root-to-leaf paths in any order.

A leaf is a node with no children.

Example 1:

Input: root = [1,2,3,null,5]
Output: ["1->2->5","1->3"]
Example 2:

Input: root = [1]
Output: ["1"]


class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> path;
        if(root == NULL){
            return path;
        }
        if(root->left == NULL && root->right == NULL){
            path.push_back(to_string(root->val));
            return path;
        }
        if(root->left != NULL){
            vector<string>leftPath = binaryTreePaths(root->left);
            for(string lp : leftPath){
                path.push_back(to_string(root->val) + "->" + lp);
            }
        }
        if(root->right != NULL){
            vector<string> rightPath = binaryTreePaths(root->right);
            for(string rp : rightPath){
                path.push_back(to_string(root->val) + "->" + rp);
            }
        }
        return path;
    }
};
